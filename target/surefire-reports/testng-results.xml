<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="53" passed="53" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-07T23:37:34 IST" name="Suite" finished-at="2025-10-07T23:37:35 IST" duration-ms="111">
    <groups>
    </groups>
    <test started-at="2025-10-07T23:37:34 IST" name="Test" finished-at="2025-10-07T23:37:35 IST" duration-ms="111">
      <class name="com.taskmanager.service.ReportServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCategoryReport()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testCategoryReport" finished-at="2025-10-07T23:37:35 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCategoryReport -->
        <test-method signature="testEmptyReport()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testEmptyReport" finished-at="2025-10-07T23:37:35 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGenerateReport()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testGenerateReport" finished-at="2025-10-07T23:37:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOverdueTasks()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testOverdueTasks" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverdueTasks -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPriorityReport()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testPriorityReport" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorityReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testStatusReport()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testStatusReport" finished-at="2025-10-07T23:37:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTasksCountByPriority()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testTasksCountByPriority" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTasksCountByPriority -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTasksCountByStatus()[pri:0, instance:com.taskmanager.service.ReportServiceTest@79efed2d]" started-at="2025-10-07T23:37:35 IST" name="testTasksCountByStatus" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTasksCountByStatus -->
      </class> <!-- com.taskmanager.service.ReportServiceTest -->
      <class name="com.taskmanager.repository.TaskRepositoryTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSaveTask()[pri:1, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="testSaveTask" finished-at="2025-10-07T23:37:34 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveTask -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindById()[pri:2, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="testFindById" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindById -->
        <test-method signature="testFindByIdNotFound()[pri:3, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="testFindByIdNotFound" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdNotFound -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindAll()[pri:4, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="testFindAll" finished-at="2025-10-07T23:37:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDelete()[pri:5, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="testDelete" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testExists()[pri:6, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="testExists" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExists -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClear()[pri:7, instance:com.taskmanager.repository.TaskRepositoryTest@6b4a4e18]" started-at="2025-10-07T23:37:34 IST" name="testClear" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
      </class> <!-- com.taskmanager.repository.TaskRepositoryTest -->
      <class name="com.taskmanager.service.TaskServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAllTasks()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testAllTasks" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllTasks -->
        <test-method signature="testCreateTask()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testCreateTask" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTask -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateTaskUsingPastDate()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testCreateTaskUsingPastDate" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <exception class="com.taskmanager.exception.InvalidDateException">
            <message>
              <![CDATA[Due date must be in the future]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.InvalidDateException: Due date must be in the future
at com.taskmanager.util.DateValidator.validateFutureDate(DateValidator.java:70)
at com.taskmanager.service.TaskService.createTask(TaskService.java:31)
at com.taskmanager.service.TaskServiceTest.testCreateTaskUsingPastDate(TaskServiceTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.InvalidDateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTaskUsingPastDate -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateTaskUsingPriorities(com.taskmanager.model.Priority)[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testCreateTaskUsingPriorities" data-provider="taskPriorities" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTaskUsingPriorities -->
        <test-method signature="testCreateTaskUsingPriorities(com.taskmanager.model.Priority)[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testCreateTaskUsingPriorities" data-provider="taskPriorities" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MEDIUM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTaskUsingPriorities -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateTaskUsingPriorities(com.taskmanager.model.Priority)[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testCreateTaskUsingPriorities" data-provider="taskPriorities" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[LOW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTaskUsingPriorities -->
        <test-method signature="testCreateTaskWithoutTitle()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testCreateTaskWithoutTitle" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <exception class="com.taskmanager.exception.TaskValidationException">
            <message>
              <![CDATA[Task title cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.TaskValidationException: Task title cannot be empty
at com.taskmanager.util.TaskValidator.validateTitle(TaskValidator.java:21)
at com.taskmanager.util.TaskValidator.validateTask(TaskValidator.java:13)
at com.taskmanager.service.TaskService.createTask(TaskService.java:30)
at com.taskmanager.service.TaskServiceTest.testCreateTaskWithoutTitle(TaskServiceTest.java:164)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.TaskValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTaskWithoutTitle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetNonExistentTask()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testGetNonExistentTask" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <exception class="com.taskmanager.exception.TaskNotFoundException">
            <message>
              <![CDATA[Task not found with ID: non-existent-id]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.TaskNotFoundException: Task not found with ID: non-existent-id
at com.taskmanager.service.TaskService.lambda$getTaskById$0(TaskService.java:55)
at java.base/java.util.Optional.orElseThrow(Optional.java:403)
at com.taskmanager.service.TaskService.getTaskById(TaskService.java:55)
at com.taskmanager.service.TaskServiceTest.testGetNonExistentTask(TaskServiceTest.java:100)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.TaskNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentTask -->
        <test-method signature="testDuplicateTask()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testDuplicateTask" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <exception class="com.taskmanager.exception.DuplicateTaskException">
            <message>
              <![CDATA[This is duplicate task. Task is already available.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.DuplicateTaskException: This is duplicate task. Task is already available.
at com.taskmanager.service.TaskService.createTask(TaskService.java:34)
at com.taskmanager.service.TaskServiceTest.testDuplicateTask(TaskServiceTest.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.DuplicateTaskException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateTask -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOverdueTasks()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:34 IST" name="testOverdueTasks" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverdueTasks -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTasksByCategory()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="testTasksByCategory" finished-at="2025-10-07T23:37:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTasksByCategory -->
        <test-method signature="testTaskById()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="testTaskById" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTaskById -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTasksByPriority()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="testTasksByPriority" finished-at="2025-10-07T23:37:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTasksByPriority -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTasksByStatus()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="testTasksByStatus" finished-at="2025-10-07T23:37:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTasksByStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="setUp" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateTask()[pri:0, instance:com.taskmanager.service.TaskServiceTest@30b7c004]" started-at="2025-10-07T23:37:35 IST" name="testUpdateTask" finished-at="2025-10-07T23:37:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTask -->
      </class> <!-- com.taskmanager.service.TaskServiceTest -->
      <class name="com.taskmanager.util.DateValidatorTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDateFormats(java.lang.String)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testDateFormats" data-provider="validDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2000-12-31 11:30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateFormats -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDateFormats(java.lang.String)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testDateFormats" data-provider="validDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1979-12-31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateFormats -->
        <test-method signature="testDateFormats(java.lang.String)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testDateFormats" data-provider="validDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[22-10-2024 20:30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateFormats -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDateFormats(java.lang.String)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testDateFormats" data-provider="validDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[31/12/2012 23:30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateFormats -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDateFormats(java.lang.String)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testDateFormats" data-provider="validDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12/12/2012]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateFormats -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEmptyDate()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testEmptyDate" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <exception class="com.taskmanager.exception.InvalidDateException">
            <message>
              <![CDATA[Please provide a date]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.InvalidDateException: Please provide a date
at com.taskmanager.util.DateValidator.convertToDate(DateValidator.java:22)
at com.taskmanager.util.DateValidatorTest.testEmptyDate(DateValidatorTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.InvalidDateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyDate -->
        <test-method signature="testInvalidDateFormats(java.lang.String)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testInvalidDateFormats" data-provider="invalidDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2024-12-32]]>
              </value>
            </param>
          </params>
          <exception class="com.taskmanager.exception.InvalidDateException">
            <message>
              <![CDATA[Invalid date format. Supported formats: yyyy-MM-dd, dd/MM/yyyy, dd-MM-yyyy, yyyy-MM-dd HH:mm]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.InvalidDateException: Invalid date format. Supported formats: yyyy-MM-dd, dd/MM/yyyy, dd-MM-yyyy, yyyy-MM-dd HH:mm
at com.taskmanager.util.DateValidator.convertToDate(DateValidator.java:44)
at com.taskmanager.util.DateValidatorTest.testInvalidDateFormats(DateValidatorTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.InvalidDateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDateFormats -->
        <test-method signature="testInvalidDateFormats(java.lang.String)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testInvalidDateFormats" data-provider="invalidDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[in-valid-date]]>
              </value>
            </param>
          </params>
          <exception class="com.taskmanager.exception.InvalidDateException">
            <message>
              <![CDATA[Invalid date format. Supported formats: yyyy-MM-dd, dd/MM/yyyy, dd-MM-yyyy, yyyy-MM-dd HH:mm]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.InvalidDateException: Invalid date format. Supported formats: yyyy-MM-dd, dd/MM/yyyy, dd-MM-yyyy, yyyy-MM-dd HH:mm
at com.taskmanager.util.DateValidator.convertToDate(DateValidator.java:44)
at com.taskmanager.util.DateValidatorTest.testInvalidDateFormats(DateValidatorTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.InvalidDateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDateFormats -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLeapYearDate()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testLeapYearDate" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeapYearDate -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLeapYearValidation(java.lang.String,boolean)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testLeapYearValidation" data-provider="leapYearDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2024-02-28 11:30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeapYearValidation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLeapYearValidation(java.lang.String,boolean)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testLeapYearValidation" data-provider="leapYearDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2000-02-29]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeapYearValidation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLeapYearValidation(java.lang.String,boolean)[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testLeapYearValidation" data-provider="leapYearDates" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2016-02-29]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeapYearValidation -->
        <test-method signature="testNullDate()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testNullDate" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <exception class="com.taskmanager.exception.InvalidDateException">
            <message>
              <![CDATA[Please provide a date]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.InvalidDateException: Please provide a date
at com.taskmanager.util.DateValidator.convertToDate(DateValidator.java:22)
at com.taskmanager.util.DateValidatorTest.testNullDate(DateValidatorTest.java:58)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.InvalidDateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullDate -->
        <test-method signature="testPastDate()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testPastDate" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <exception class="com.taskmanager.exception.InvalidDateException">
            <message>
              <![CDATA[Due date must be in the future]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.InvalidDateException: Due date must be in the future
at com.taskmanager.util.DateValidator.validateFutureDate(DateValidator.java:70)
at com.taskmanager.util.DateValidatorTest.testPastDate(DateValidatorTest.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.InvalidDateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPastDate -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidDate()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testValidDate" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidDate -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidFutureDate()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="testValidFutureDate" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFutureDate -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.util.DateValidatorTest@65d6b83b]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.taskmanager.util.DateValidatorTest -->
      <class name="com.taskmanager.service.CategoryServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAllEmptyRepositoryCategories()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="testAllEmptyRepositoryCategories" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllEmptyRepositoryCategories -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCategoryById()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="testCategoryById" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCategoryById -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateCategory()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="testCreateCategory" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCategory -->
        <test-method signature="testDeleteCategory()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="testDeleteCategory" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCategory -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAllCategories()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="testGetAllCategories" finished-at="2025-10-07T23:37:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCategories -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateCategory()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="testUpdateCategory" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateCategory -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateNonExistentCategory()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="testUpdateNonExistentCategory" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <exception class="com.taskmanager.exception.CategoryNotFoundException">
            <message>
              <![CDATA[Category not found with ID: non-existent-id]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.taskmanager.exception.CategoryNotFoundException: Category not found with ID: non-existent-id
at com.taskmanager.service.CategoryService.updateCategory(CategoryService.java:26)
at com.taskmanager.service.CategoryServiceTest.testUpdateNonExistentCategory(CategoryServiceTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.taskmanager.exception.CategoryNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateNonExistentCategory -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.taskmanager.service.CategoryServiceTest@d706f19]" started-at="2025-10-07T23:37:34 IST" name="setUp" finished-at="2025-10-07T23:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.taskmanager.service.CategoryServiceTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
